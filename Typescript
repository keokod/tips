#création d'objet vide avec enum:
    enum Role {Employee, Manager, Admin};
#donne:

Object { 0: "Employee", 1: "Manager", 2: "Admin", Employee: 0, Manager: 1, Admin: 2 } main.bundle.js:192:9
Object { 0: "Employee", 1: "Manager", 2: "Admin", Employee: 0, Manager: 1, Admin: 2 } main.bundle.js:192:9
Object { 0: "Employee", 1: "Manager", 2: "Admin", Employee: 0, Manager: 1, Admin: 2 }

    enum Role {Employee, Manager, Admin};
    console.log('Roles: ', Role[0], ',', Role[1], 'and', Role[2]);
 #donne   Roles:  Employee , Manager and Admin

class Report {
data: Array<string>;
constructor(data: Array<string>) {
this.data = data;
}
run() {
this.data.forEach(function(line) { console.log(line); });
}
}

var r: Report = new Report(['First line', 'Second line']);
r.run();

#héritage

class TabbedReport extends Report { #hérite du contructeur report
headers: Array<string>;
constructor(headers: string[], values: string[]) {
super(values)
this.headers = headers;
}
run() {
console.log(this.headers);
super.run();
}
}
var headers: string[] = ['Name'];
var data: string[] = ['Alice Green', 'Paul Pfifer', 'Louis Blakenship'];
var r: TabbedReport = new TabbedReport(headers, data)
r.run();
